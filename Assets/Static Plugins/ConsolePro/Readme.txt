Version 3.0

Editor Console Pro is a powerful replacement for Unity's editor console.

It is accessed in the Window menu under Console Pro, or by pressing Command + \

# Searching:
Type a search string in the top left <filter> field to only show entries containing the search text.
Press the ... button next the field to get more options, such as regex and case sensitive searches.

# Custom filters:
Custom filters allow you to add more log types to the toolbar next to Errors, Warnings, Logs and to give them a custom color.  You can filter them by type and string.
You can create and modify these in Prefs\Custom Filters

# Shared filters:
Shared filters are custom filters in an external file.  These are per project, so you can set a different set of filters for each project you are in, also commit this file to version control if you would like other people to use them.
You can create and modify these in Prefs\Shared Filters

# Temporary filters:
Simply start any log with #NAME#, and Console Pro will create a temporary filter button containing these logs.  
For example:
Debug.Log("#Player# Player created");
Debug.Log("#Player# Player destroyed");
The color is generated by the name.

# Ignore
When you ignore something, it will not show up in Console Pro.
You can create and modify these in Prefs\Ignore
You can quickly ignore a stack entry forever by right clicking it in the stack, and pressing Ignore.
You can ignore a log forever adding it to the Ignore Logs list.

# Columns
Columns for the logs can show various things like the file the log came from or the namespace of the method that called it.
To quickly enable or disable a column, press the ... button to the left of Prefs.
You can modify column order in Prefs\Columns

# Jumping to stack entries
Simply click on any line in the stack panel to jump to that line in the source code.  Double clicking a log entry jumps to the top stack entry as normal.

# Remote Logging
Remote logging allows you to read the logs at runtime on a device like an iPad or Android tablet over WiFi, or on a standalone build.  The steps to use remote logging are as follows:
Add a GameObject to main scene
Add the component called "Console Pro Remote Server" to your new GameObject
Set the port you would like to use on the component
Build and run your game on the device
Press the ... button to the left of Prefs, and click Remote Mode.
Press the button labeled "Remote" in the top right.
Enter your device's IP address and port with the format IP:Port.  If this is a standalone build on your own machine, just put localhost:port.

# Copying and Exporting
Right click an entry and press Copy Stack to put a copy of the current stack into the clipboard, or Copy Log to put a copy of the current log into the clipboard.
Press the ... button to the left of Prefs, and press Export to export a text file of the entire log.

# Support
Please EMail all support and feature requests to Support@Flyingworm.com